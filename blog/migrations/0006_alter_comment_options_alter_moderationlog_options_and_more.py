# Generated by Django 5.2 on 2025-04-26 17:58

import ckeditor.fields
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('blog', '0005_alter_moderationlog_acao'),
        ('classes', '0003_alter_class_options_alter_class_name_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='comment',
            options={'ordering': ['publicado_em'], 'verbose_name': 'Comment', 'verbose_name_plural': 'Comments'},
        ),
        migrations.AlterModelOptions(
            name='moderationlog',
            options={'ordering': ['-data'], 'verbose_name': 'Moderation Log Entry', 'verbose_name_plural': 'Moderation Log Entries'},
        ),
        migrations.AlterModelOptions(
            name='post',
            options={'ordering': ['-publicado_em'], 'verbose_name': 'Post', 'verbose_name_plural': 'Posts'},
        ),
        migrations.AlterField(
            model_name='comment',
            name='autor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to=settings.AUTH_USER_MODEL, verbose_name='author'),
        ),
        migrations.AlterField(
            model_name='comment',
            name='conteudo',
            field=models.TextField(verbose_name='content'),
        ),
        migrations.AlterField(
            model_name='comment',
            name='motivo_remocao',
            field=models.CharField(blank=True, help_text='Reason provided for removing the comment.', max_length=255, verbose_name='reason for removal'),
        ),
        migrations.AlterField(
            model_name='comment',
            name='post',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='blog.post', verbose_name='post'),
        ),
        migrations.AlterField(
            model_name='comment',
            name='publicado_em',
            field=models.DateTimeField(default=django.utils.timezone.now, verbose_name='published at'),
        ),
        migrations.AlterField(
            model_name='comment',
            name='removido',
            field=models.BooleanField(default=False, help_text='Indicates if the comment has been removed by moderation.', verbose_name='removed'),
        ),
        migrations.AlterField(
            model_name='comment',
            name='removido_em',
            field=models.DateTimeField(blank=True, help_text='Timestamp when the comment was removed.', null=True, verbose_name='removed at'),
        ),
        migrations.AlterField(
            model_name='comment',
            name='removido_por',
            field=models.ForeignKey(blank=True, help_text='User who removed the comment.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='comments_removidos', to=settings.AUTH_USER_MODEL, verbose_name='removed by'),
        ),
        migrations.AlterField(
            model_name='moderationlog',
            name='acao',
            field=models.CharField(choices=[('REMOVER_POST', 'Remove Post'), ('RESTAURAR_POST', 'Restore Post'), ('REMOVER_COMMENT', 'Remove Comment')], help_text='The type of moderation action performed.', max_length=20, verbose_name='action'),
        ),
        migrations.AlterField(
            model_name='moderationlog',
            name='comment',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='blog.comment', verbose_name='comment'),
        ),
        migrations.AlterField(
            model_name='moderationlog',
            name='conteudo_snapshot',
            field=models.TextField(blank=True, help_text='A snapshot of the content at the time of the action.', verbose_name='content snapshot'),
        ),
        migrations.AlterField(
            model_name='moderationlog',
            name='data',
            field=models.DateTimeField(default=django.utils.timezone.now, verbose_name='timestamp'),
        ),
        migrations.AlterField(
            model_name='moderationlog',
            name='motivo',
            field=models.CharField(blank=True, help_text='Optional reason provided by the moderator.', max_length=255, verbose_name='reason'),
        ),
        migrations.AlterField(
            model_name='moderationlog',
            name='post',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='blog.post', verbose_name='post'),
        ),
        migrations.AlterField(
            model_name='moderationlog',
            name='user',
            field=models.ForeignKey(blank=True, help_text='The user who performed the moderation action.', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='moderator'),
        ),
        migrations.AlterField(
            model_name='post',
            name='autor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', to=settings.AUTH_USER_MODEL, verbose_name='author'),
        ),
        migrations.AlterField(
            model_name='post',
            name='categoria',
            field=models.CharField(choices=[('DIARIO', 'Class Diary'), ('AVISO', 'Announcement'), ('PROJETO', 'Project Update'), ('TRABALHO', 'Student Work'), ('OUTRO', 'Other')], default='OUTRO', help_text='The main category of the post.', max_length=20, verbose_name='category'),
        ),
        migrations.AlterField(
            model_name='post',
            name='conteudo',
            field=ckeditor.fields.RichTextField(verbose_name='content'),
        ),
        migrations.AlterField(
            model_name='post',
            name='motivo_remocao',
            field=models.CharField(blank=True, help_text='Reason provided for removing the post.', max_length=255, verbose_name='reason for removal'),
        ),
        migrations.AlterField(
            model_name='post',
            name='publicado_em',
            field=models.DateTimeField(default=django.utils.timezone.now, verbose_name='published at'),
        ),
        migrations.AlterField(
            model_name='post',
            name='removido',
            field=models.BooleanField(default=False, help_text='Indicates if the post has been removed by moderation.', verbose_name='removed'),
        ),
        migrations.AlterField(
            model_name='post',
            name='removido_em',
            field=models.DateTimeField(blank=True, help_text='Timestamp when the post was removed.', null=True, verbose_name='removed at'),
        ),
        migrations.AlterField(
            model_name='post',
            name='removido_por',
            field=models.ForeignKey(blank=True, help_text='User who removed the post.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='posts_removidos', to=settings.AUTH_USER_MODEL, verbose_name='removed by'),
        ),
        migrations.AlterField(
            model_name='post',
            name='subcategoria_diario',
            field=models.CharField(blank=True, choices=[('GOSTEI', 'Liked'), ('NAO_GOSTEI', 'Disliked'), ('QUEREMOS', 'We Want'), ('FIZEMOS', 'We Did')], help_text='Specific subcategory if the main category is Class Diary.', max_length=20, null=True, verbose_name='diary subcategory'),
        ),
        migrations.AlterField(
            model_name='post',
            name='titulo',
            field=models.CharField(blank=True, help_text='Optional title for the post.', max_length=200, verbose_name='title'),
        ),
        migrations.AlterField(
            model_name='post',
            name='turma',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', to='classes.class', verbose_name='class'),
        ),
        migrations.AlterField(
            model_name='post',
            name='visibilidade',
            field=models.CharField(choices=[('INTERNA', 'Internal (Class Members Only)')], default='INTERNA', help_text='Controls who can view the post.', max_length=10, verbose_name='visibility'),
        ),
    ]
